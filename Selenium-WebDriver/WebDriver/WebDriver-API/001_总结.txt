#这个总结是针对python3，改写成python2要注意中文字体前加u，编码格式，print的括号问题

from selenium import webdriver
driver = webdriver.Firefox() #这里浏览器、操作系统都可能有差异，注意区别 Ie(executable_path = "e:\\IEDriverServer")  #打开浏览器
driver.get("http://wenku.baidu.com") #01_访问某个网址.txt
driver.back() #向后退
driver.forward() #向前进 02_网页的前进和后退.txt
driver.refresh()  #刷新页面 03_刷新当前网页.txt

driver.maximize_window() #窗口最大化 04_浏览器窗口最大化.txt

driver.get_window_position() #获取坐标位置
{'y': -8, 'x': 1672}
driver.get_window_position()['x'] #获取x轴的位置
driver.get_window_position()['y'] #获取y轴的位置
driver.set_window_position(y=200, x=400) #设置浏览器坐标  05_获取并设置当前窗口的位置.txt

driver.get_window_size() #获取浏览器的窗体大小
{'width': 160, 'height': 32}
driver.get_window_size()['width'] #获取浏览器的宽度
driver.get_window_size()['height'] #获取浏览器的高度
driver.set_window_size(100,200) #设置浏览器的窗体大小 06_获取并设置当前窗口的大小宽高

print(driver.title) #获取页面title，可以用于做断言看打开的页面对不对.  07_获取页面的Title属性值.txt
assert u"搜狐" == driver.title  #断言标题是否正确
assert u"搜狐2" == driver.title #断言标题出错
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
AssertionError

print(driver.page_source) #获取网页源码，返回的其实是unicode字符串 08_获取页面的HTML源代码.txt
driver.page_source[:50] #获取第50行的页面源码

u"热门词汇" in driver.page_source #判断指定字段是不是在页面源码中存在
True

print(driver.current_url) #获取当前页面的url. 09_获取当前页面的URL地址.txt










这里python2与python3有很大的不同，python3就不要这种操作
driver.page_source.encode("gbk","ignore") #将页面源码转码成中文，加ignore避免无法识别的生僻字报错
html=driver.page_source.encode("gbk","ignore") #将页面源码转成html文件
>>> with open("e:\\1.html","w"):
...     pass
...
>>> with open("e:\\1.html","w") as fp:
...     fp.write(html)
...


driver.name  #判断使用的浏览器
u'internet explorer'

driver.set_page_load_timeout(2) #设置超时等待的时间，超过不再等待

 try:   #捕获超时异常
    driver.get("http://www.sohu.com")
... except Exception,e:
...     print e
...
Message: Timed out waiting for page to load.
