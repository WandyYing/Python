这个属于公共模块
策略：
1.随机更换User-agent用户代理
2.创建ip代理池


1.目前需要采取的办法
取消settings.py文件中的DOWNLOADER_MIDDLEWARES的注释状态
DOWNLOADER_MIDDLEWARES = {
   'ArticleSpider.middlewares.MyCustomDownloaderMiddleware': 543,
}
配置默认useagent为none
DOWNLOADER_MIDDLEWARES = {
   'ArticleSpider.middlewares.MyCustomDownloaderMiddleware': 543,
    'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware': None
}

使用fakeuseragent
pip install fake-useragent

setting.py文件中设置随机模式RANDOM_UA_TYPE = "random"

在middlewares.py文件中添加方法：
from fake_useragent import UserAgent

class RandomUserAgentMiddlware(object):
    #随机更换user-agent
    def __init__(self, crawler):
        super(RandomUserAgentMiddlware, self).__init__()
        self.ua = UserAgent()
        self.ua_type = crawler.settings.get("RANDOM_UA_TYPE", "random")

    @classmethod
    def from_crawler(cls, crawler):
        return cls(crawler)

    def process_request(self, request, spider):
        def get_ua():
            return getattr(self.ua, self.ua_type)

        request.headers.setdefault('User-Agent', get_ua())
 把这里的对修改一下       
 DOWNLOADER_MIDDLEWARES = {
   'ArticleSpider.middlewares.RandomUserAgentMiddlware': 543,
    'scrapy.downloadermiddlewares.useragent.UserAgentMiddleware': None
}


2.
使用西刺免费代理，不稳定不好用
在主目录下新建个tools的目录，新建个crawl_xici_ip.py文件，代码详见
然后在middlewares.py文件中配置对象RandomProxyMiddleware
class RandomProxyMiddleware(object):
    #动态设置ip代理
    def process_request(self,request,spider):
        get_ip = Get_IP()
        request.meta["proxy"] = get_ip.get_random_ip()
        
 然后在settings.py文件中引入middlewares.py中的对象
 /project_name/settings.py)添加
DOWNLOADER_MIDDLEWARES = {
    'scrapy.contrib.downloadermiddleware.httpproxy.HttpProxyMiddleware': 110,
    'project_name.middlewares.ProxyMiddleware': 100,
}


另外的方式：
收费接口
scrapy-crawlera
官方文档：
https://scrapy-crawlera.readthedocs.io/en/latest/

