ad-hoc 命令的操作。
eg1：执行命令查看 setup 模块中所有我们需要操作的机器的信息。
$ ansible all -m setup

eg2：执行命令让操作的机器输出 Hello 。
$ ansible test -a "/bin/echo Hello "

eg3：执行命令让 test 组中的主机在指定目录下创建文件，并设置权限。
$ ansible test -m file -a "dest=/home/file state=touch mode=777"

Ansible中没有相应的模块支持的操作时，我们可以尝试的解决办法是直接使用shell模块来执行命令即可，如下这个例子：
$ ansible test -m shell -a 'free -m'

    ansible <pattern_hosts> -m <module_name> -a <arguments>
    1.远程命令模块
    command      //远程执行shell命令
    scripts           //scp + shell
    shell             //执行远程主机的shell脚本
    eg:
    ansible webserver -m command -a "uptime"
    2.copy模块
    ansible webserver -m copy -a "src=  dest=  owner=  group= mode= "
    3.stat模块
    4.get_url
    5.yum模块
    ansible webserver -m yum -a "name=    state= "
    ansible webserver -m apt -a "name=    state= "
    6.cron
    ansible webserver -m cron -a "name='check dirs' hour='5.2'  job='ls -alh > /dev/null'"
    7.mount
    ansible webserver -m mount -a "name=/mnt src=/dev/sdb fstype=ext4 opts=ro state=present"
    8.service
    ansible webserver -m service -a "name=httpd state=stopped"
    9.sysctl
    10.user
    ansible webserver -m user -a "name=dayuan comment='dayuanhello'"            //添加用户
    ansible webserver -m user -a "name=dayuan state=absent removes=yes"       //删除用户


AD-HOC 返回类型
有如下三种：
    success：这个结果表示操作成功，其中有两种情况，第一种情况是当执行一些查询的简单操作并且不需要修改内容时，表示该操作没问题；第二种情况就是当这个操作曾经执行过再执行时就会直接表示成功。
    changed：true 这样的结果表示执行的一些修改操作执行成功，如上文的创建了一个文件，或者修改了配置文件，复制了一个文件等等这类的操作就会有这样的结果。
    failed：这样的结果表示这个操作执行失败，可能是密码错误，参数错误等等，具体看提示中的 msg 的值。并且在 playbook 中会有多个任务，中间的某个任务出现这样的情况都不会继续往下执行。
    
    

