自动化资产扫描发现
（资产扫描作用、nmap存活扫描、telnetlib端口扫描、perspect登陆探测、paramiko登陆探测、docker容器扫描、KVM虚拟机扫描、snmp网络设备、
SDK调用扫描ESXI）




2.nmap存活扫描(使用python2.7 python-nmap库)
    利用到的探测协议
    ICMP 特性：无连接 用途：网络探测、网络质量
    TCP  特性：有连接 用途：应用协议
    利用nmap工具参数：
      nmap -n -sP IP
      nmap -n -PE IP
      nmap -n -sP -PE 192.168.1.0/24
    命令：
    import nmap
    nm = nmap.PortScanner()
    print(nm.scan(hosts="IP网段",arguments="-n -sP -PE"))
    print(nm.all_hosts())

3.SSH端口存活扫描(使用python2.7 telnetlib库):
    命令：
    import telnetlib
    tm = telnetlib.Telnet(host='IP',port='22',timeout=4)
    print tm.read_until("\n",timeout=5)
  
4.主机登陆探测(pexpect和paramiko模块)
流程：主机存活探测（得到存活主机IP列表）-> ssh端口探测（区分Linux与非Linux主机列表,得到可SSH登录主机列表）-> 
                            ssh登录探测（得到SSH用户密码登录列表与SSH Key登录列表）-> 主机信息获取（需要获取的主机信息)
命令：
密码登陆方式；
    ssh -l 用户名 IP -p 22
    输入密码
密钥登陆方式：
    ssh -i 密钥位置 -l 用户名 IP -p 22
pexpect和paramiko模块：
    pexpect用来通过启动子程序，使用正则表达式对程序输出做出特定响应，以此实现与其自动交互的python模块。
        pexpect的run()函数:直接执行命令和返回结果
            命令：
            import pexpect
    pexpect场景：

    
    paramiko基于Python实现的SSH远程安全连接，用于SSH远程执行命令、文件传输等功能的ssh客户端模块。
    命令：
    验证密码登陆方式：
    >>> import paramiko
    >>> jssh=paramiko.SSHClient()
    >>> jssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    >>> jssh.connect('IP','22','用户名','用户密码')
    验证密钥登陆方式；
    >>> import paramiko
    >>> jssh=paramiko.SSHClient()
    >>> jssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
    >>> key = paramiko.RSAKey.from_private_key_file('密钥位置')
    >>> jssh.connect('IP','22','用户名',pkey=key)
    在登陆成功的主机输入命令，
    >>> stdin,stdout,stderr = jssh.exec_command('ls /tmp')
    >>> print stdout.read()
    >>> print stderr.readlines()
